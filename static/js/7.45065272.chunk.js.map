{"version":3,"sources":["components/common/nav.jsx","components/common/basicScene.jsx","helpers/AFrameRender.jsx","helpers/Marker.jsx","components/common/tracking.jsx","components/assets/img/earth.png","components/common/earthTracking.jsx","components/assets/models/fenix/fenix.glb","components/common/3DAnimation.jsx","components/common/3Dmodel.jsx","components/common/socialMedia.jsx","container/sceneTemplate/index.jsx"],"names":["NavComponent","history","useHistory","useState","setLocation","useEffect","element","document","getElementById","parentNode","removeChild","pushLink","_location","a","window","location","reload","push","className","to","onClick","BasicSceneComponent","arjs","id","src","crossOrigin","alt","geometry","material","random-color","snap","radius","height","theta-length","mixin","position","attribute","repeat","PARAMETERS","AFrameRenderer","container","body","renderer","componentWillUnmount","dispose","passSceneRef","getSceneRef","ref","renderVirtualComponent","component","ReactDOM","createPortal","inherentMode","value","prepareToolKitParams","parameters","toolKitParams","Object","keys","forEach","param","includes","flush","props","arToolKit","children","inherent","rest","sceneRef","embedded","this","Component","defaultProps","childContextTypes","PropTypes","bool","Marker","shouldUseCustomMarker","markerProps","undefined","preset","url","patternUrl","renderUsingMatrixMode","context","contextTypes","TrackMarker","color","scale","dur","easing","camera","EarthTrackComponent","earthImage","segments-height","from","AnimationModelComponent","grab","gltf-model","animation","animation-mixer","ModelTrackMarkerComponent","SocialMediaComponent","FacebookShareButton","quote","hashtag","FacebookIcon","TwitterShareButton","title","TwitterIcon","LinkedinShareButton","LinkedinIcon","SceneTemplateContainer"],"mappings":"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","file":"static/js/7.45065272.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../assets/css/index.scss';\n\nimport { useHistory } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nconst NavComponent = () => {\n    const history = useHistory();\n    // eslint-disable-next-line \n    const [useLocaiton, setLocation] = useState('');\n\n    useEffect(() => {\n        var element = document.getElementById(\"arjs-video\");\n        if (element) element.parentNode.removeChild(element);\n\n    },[])\n\n    const pushLink = async (_location) => {\n        window.location.reload();\n        history.push(_location);\n        setLocation(_location)\n    }\n\n    return (\n        <>\n            <div className=\"nav\">\n                <Link to=\"/\"><button>Tracking Square</button></Link>\n                <Link to=\"/earth\"><button>Tracking Earth-Image</button></Link>\n                <Link to='/model'><button>Tracking 3D-Model</button></Link>\n                <Link to='/animation'><button>Tracking 3D-Animation</button></Link>\n                <div onClick={() => pushLink('/basicScene')}>\n                    <Link to='/basicScene' ><button>3D-Scene</button></Link>\n                </div>\n\n            </div>\n        </>\n    )\n}\n\nexport { NavComponent };","import React from 'react';\n\nconst BasicSceneComponent = () => {\n\n    \n\n    return (\n        <>\n            <a-scene arjs=\"debugUIEnabled: false; sourceType: image\">\n                <a-assets>\n                    <img id=\"groundTexture\" src=\"https://cdn.aframe.io/a-painter/images/floor.jpg\" crossOrigin=\"anonymous\" alt=\"groundTexture\" />\n                    <img id=\"skyTexture\" src=\"https://cdn.aframe.io/a-painter/images/sky.jpg\" crossOrigin=\"anonymous\" alt=\"skyTexture\" />\n                    <a-mixin id=\"voxel\"\n                        geometry=\"primitive: box; height: 0.5; width: 0.5; depth: 0.5\"\n                        material=\"shader: standard\"\n                        random-color\n                        snap=\"offset: 0.25 0.25 0.25; snap: 0.5 0.5 0.5\"></a-mixin>\n                </a-assets>\n\n                <a-cylinder id=\"ground\" src=\"#groundTexture\" radius=\"30\" height=\"0.1\"></a-cylinder>\n\n                <a-sky id=\"background\" src=\"#skyTexture\" theta-length=\"90\" radius=\"30\"></a-sky>\n\n                <a-entity mixin=\"voxel\" position=\"-1 0 -5\"></a-entity>\n                <a-entity mixin=\"voxel\" position=\"0 0 -5\"></a-entity>\n                <a-entity mixin=\"voxel\" position=\"0 1 -5\">\n                    <a-animation attribute=\"rotation\" to=\"0 360 0\" repeat=\"indefinite\"></a-animation>\n                </a-entity>\n                <a-entity mixin=\"voxel\" position=\"1 0 -5\"></a-entity>\n            </a-scene>\n\n        </>\n    )\n}\n\nexport { BasicSceneComponent };","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\nconst PARAMETERS = [\n  // Core config\n  \"detectionMode\",\n  \"matrixCodeType\",\n  \"cameraParametersUrl\",\n  \"maxDetectionRate\",\n\n  // Source configuration\n  \"sourceType\",\n  \"sourceUrl\",\n  \"sourceWidth\",\n  \"sourceHeight\",\n\n  // Canvas dimensions\n  \"displayHeight\",\n  \"displayWidth\",\n  \"canvasWidth\",\n  \"canvasHeight\",\n\n  // Tracking module ['tango', 'artoolkit', 'best']\n  \"trackingMethod\",\n  \"areaLearningButton\",\n  \"performanceProfile\",\n  \"tangoPointCloudEnabled\",\n  \"debugUIEnabled\"\n];\n\n/**\n * AFrameRenderer\n * \n * Render aframe.io primitives using a single marker\n * \n * Use multiple markers (independent) and render different objects\n * \n * Use camera as an entity or use cameraTransformMatrix (camera movement)\n *  \n * Can also render aframe.io bindings for React (WebVR) \n *\n * Bugs/Errors to patch:\n * \n * AR.js gives this error 'THREEx.ArMarkerControls: 'markersAreaEnabled' is not a property of this material.'\n * \n * Why ?\n * - Composition\n * - DRY code\n * - Abstraction over artoolkit\n */\nexport default class AFrameRenderer extends Component {\n  container = document.body;\n  renderer = null;\n\n  static propTypes = {\n    arToolKit: PropTypes.shape({\n      sourceType: PropTypes.string,\n      sourceUrl: PropTypes.string,\n      debugUIEnabled: PropTypes.bool,\n      detectionMode: PropTypes.string,\n      matrixCodeType: PropTypes.string,\n      cameraParametersUrl: PropTypes.string,\n      maxDetectionRate: PropTypes.number,\n      sourceWidth: PropTypes.number,\n      sourceHeight: PropTypes.number,\n      displayWidth: PropTypes.number,\n      displayHeight: PropTypes.number,\n      canvasWidth: PropTypes.number,\n      canvasHeight: PropTypes.number\n    }),\n    getSceneRef: PropTypes.func,\n    inherent: PropTypes.bool\n  };\n\n  static defaultProps = {\n    arToolKit: {},\n    getSceneRef: () => {}, // No ref\n    inherent: true // use modelViewMatrix\n  };\n\n  static childContextTypes = {\n    inherent: PropTypes.bool\n  };\n\n  // This prop is used by the <Marker /> component to decide whether to use modelViewMatrix or cameraTransformMatrix\n  getChildContext() {\n    return {\n      inherent: this.props.inherent\n    };\n  }\n\n  // Clear the rendering context\n  // Fallback if <a-scene /> primitive fails to dispose the renderer\n  componentWillUnmount = () => {\n    this.renderer && this.renderer.dispose();\n  };\n\n  // Pass <a-scene /> reference as a prop. Useful for usage with aframe.io APIs\n  passSceneRef = (getSceneRef, ref) => getSceneRef(ref) || ref;\n\n  // We need to render the <a-scene> outside the parent container\n  // because arjs adds the image (sourceType) outside the parent container\n  // and the tracking module cannot track the position of the marker lying outside its context\n\n  // Alternate will be to change this behavior in arjs's aframe fork but\n  // its not convenient at all because it may break their internals (AR.js, aframe fork and threex.artoolkit)\n  renderVirtualComponent = component =>\n    ReactDOM.createPortal(component, this.container);\n\n  // Use a basic marker component and a camera entity (modelViewMatrix)\n  // Determines what user sees. There are no mappings for props on this component i.e userheight: 0\n  // The camera is static and its present in negative z-axis\n  // static at (0, 0, 0)\n  inherentMode = value => (value ? <a-camera-static /> : null);\n\n  // arjs toolkit parameters (these mappings are already validated in arjs)\n  prepareToolKitParams = parameters => {\n    let toolKitParams = \"\";\n\n    Object.keys(parameters).forEach(param => {\n      if (PARAMETERS.includes(param)) {\n        toolKitParams += `${param}: ${parameters[param]};`;\n      }\n    });\n\n    return toolKitParams;\n  };\n\n  // Flush the output\n  flush = props => {\n    const { arToolKit, children, getSceneRef, inherent, ...rest } = props;\n\n    return this.renderVirtualComponent(\n      <a-scene\n        // Forward the scene reference as it is useful in VR enter and exit events\n        // where this ref node can be use to add or remove content\n        ref={sceneRef =>\n          this.passSceneRef(getSceneRef, sceneRef) &&\n          (this.renderer = sceneRef)}\n        // Remove full screen props from the canvas\n        embedded\n        // Custom component registered by arjs\n        arjs={this.prepareToolKitParams(arToolKit)}\n        // Inject the rest of the component props\n        {...rest}\n      >\n        {children}\n        {this.inherentMode(inherent)}\n      </a-scene>\n    );\n  };\n\n  render() {\n    // Renderless! (we currently use portals to render in body and not in parent container)\n    return this.flush(this.props);\n  }\n}","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Renders an object under a marker with a preset or a patternUrl\nexport default class Marker extends Component {\n  static propTypes = {\n    parameters: PropTypes.shape({\n      type: PropTypes.string,\n      size: PropTypes.number,\n      patternUrl: PropTypes.string,\n      url: PropTypes.string,\n      barcodeValue: PropTypes.number,\n      changeMatrixMode: PropTypes.string,\n      minConfidence: PropTypes.number,\n      preset: PropTypes.string,\n      markerhelpers: PropTypes.bool,\n      \"hit-testing-enabled\": PropTypes.bool,\n      \"hit-testing-renderDebug\": PropTypes.bool\n    })\n  };\n\n  static defaultProps = {\n    // arjs component already has a mapping to default parameters,\n    parameters: {}\n  };\n\n  static contextTypes = {\n    inherent: PropTypes.bool\n  };\n\n  // Render using a custom marker\n  shouldUseCustomMarker = markerProps => {\n    if (markerProps !== undefined && markerProps.preset === \"custom\") {\n      markerProps.url = markerProps.patternUrl;\n      // We don't need patternUrl anymore when dealing with custom markers, so goodbye!\n      delete markerProps.patternUrl;\n      return markerProps;\n    }\n  };\n\n  renderUsingMatrixMode = props => {\n    // Check if the component is using a custom marker\n    this.shouldUseCustomMarker(props.parameters);\n\n    // Track the marker movement and use modelViewMatrix\n    if (this.context.inherent) {\n      return <a-marker {...props.parameters}>{props.children}</a-marker>;\n    } else {\n      // Track the movement of the camera and use cameraTransformMatrix\n      // Uses cameraTransformMatrix as matrix mode for tracking the movement of the camera instead of the object\n      return (\n        <a-marker-camera {...props.parameters}>\n          {props.children}\n        </a-marker-camera>\n      );\n    }\n  };\n\n  render() {\n    return this.renderUsingMatrixMode(this.props);\n  }\n}","import React from 'react';\n\n// eslint-disable-next-line \nimport { AFrameRenderer, Marker } from '../../helpers';\n\nconst TrackMarker = () => {\n\n    return (\n        // <AFrameRenderer arToolKit={{ sourceType: 'webcam' }} >\n        //     <Marker parameters={{ preset: 'hiro' }}>\n\n        //         <a-box color=\"blue\" material=\"opacity: 1;\" position=\"0 0.09 0\" scale=\"0.4 0.8 0.8\">\n        //             <a-animation attribute=\"rotation\" to=\"360 0 0\" dur=\"5000\" easing=\"linear\" repeat=\"indefinite\" />\n        //         </a-box>\n\n        //     </Marker>\n        // </AFrameRenderer>\n        <a-scene arjs=\"sourceType:webcam\">\n            <a-marker preset=\"hiro\">\n                <a-box color=\"blue\" material=\"opacity: 1;\" position=\"0 0.09 0\" scale=\"0.4 0.8 0.8\">\n                    <a-animation attribute=\"rotation\" to=\"360 0 0\" dur=\"5000\" easing=\"linear\" repeat=\"indefinite\" />\n                </a-box>\n            </a-marker>\n            <a-entity camera></a-entity>\n        </a-scene>\n    )\n}\n\nexport { TrackMarker };","export default __webpack_public_path__ + \"static/media/earth.1b5b8bea.png\";","import React  from 'react';\n\nimport earthImage from '../assets/img/earth.png';\n\n// eslint-disable-next-line \nimport { AFrameRenderer, Marker } from '../../helpers';\n\n\nconst EarthTrackComponent = () => {\n\n    return (\n        // <AFrameRenderer arToolKit={{ sourceType: 'webcam' }} >\n        //     <Marker parameters={{ preset: 'hiro' }}>\n\n        //         <a-assets-item img id=\"earthImage\" src={earthImage} />\n\n        //         <a-sphere src=\"#earthImage\" radius=\"1\" segments-height=\"53\">\n        //             <a-animation\n        //                 attribute=\"rotation\"\n        //                 dur=\"3000\"\n        //                 from=\"1 -90 90\"\n        //                 to=\"360 -90 90\"\n        //                 easing=\"linear\"\n        //                 repeat=\"indefinite\" />\n        //         </a-sphere>\n\n        //     </Marker>\n        // </AFrameRenderer>\n        <a-scene arjs=\"sourceType:webcam\">\n            <a-assets>\n                <img id=\"earthImage\" src={earthImage} alt=\"earthImage\"/>\n            </a-assets>\n            <a-marker preset=\"hiro\">\n\n                <a-sphere src=\"#earthImage\" radius=\"1\" segments-height=\"53\">\n                    <a-animation\n                        attribute=\"rotation\"\n                        dur=\"3000\"\n                        from=\"1 -90 90\"\n                        to=\"360 -90 90\"\n                        easing=\"linear\"\n                        repeat=\"indefinite\" />\n                </a-sphere>\n            </a-marker>\n            <a-entity camera></a-entity>\n        </a-scene>\n    )\n}\n\nexport { EarthTrackComponent };","export default __webpack_public_path__ + \"static/media/fenix.ad321c30.glb\";","import React from 'react';\n\nimport animation from '../assets/models/fenix/fenix.glb';\n\nconst AnimationModelComponent = () => {\n\n    return (\n        <>\n            <a-scene arjs=\"sourceType:webcam\">\n                <a-marker preset=\"hiro\">\n                    <a-entity\n                        grab\n                        position=\"0 1 0\"\n                        // gltf-model=\"https://cdn.glitch.com/1061d524-9d0f-4b25-97fd-48ebd0fce63c%2Fsceneglb.glb?1546534633849\"\n                        gltf-model={animation}\n                        scale=\"0.01 0.01 0.01\" animation-mixer=\"clip:Take 001; loop:2; timeScale: 1.2; crossFadeDuration: 1\"\n                    ></a-entity>\n                </a-marker>\n            </a-scene>\n        </>\n    )\n}\n\nexport { AnimationModelComponent };","import React from 'react';\n\n// eslint-disable-next-line \nimport { AFrameRenderer, Marker } from '../../helpers';\n\nconst ModelTrackMarkerComponent = () => {\n    \n    return (\n        <>\n            {/* <AFrameRenderer arToolKit={{ sourceType: 'webcam', trackingMethod: 'best' }}>\n                <Marker parameters={{ preset: 'hiro' }}> */}\n            {/* <a-asset-item id=\"tree\" src=\"https://arjs-cors-proxy.herokuapp.com/https://tests.offtopicproductions.com/ywca.gltf\"></a-asset-item> */}\n\n            {/* <a-entity\n                    position=\"0 -1 0\"\n                    scale=\"0.05 0.05 0.05\"\n                    gltf-model=\"https://arjs-cors-proxy.herokuapp.com/https://tests.offtopicproductions.com/ywca.gltf\" \n                ></a-entity> */}\n\n            {/* <a-entity\n                        grab\n                        position=\"0 -1 0\"\n                        scale=\"0.05 0.05 0.05\"\n                        gltf-model=\"https://arjs-cors-proxy.herokuapp.com/https://raw.githack.com/AR-js-org/AR.js/master/aframe/examples/image-tracking/nft/trex/scene.gltf\"\n                        animation=\"property: rotation; to: 0 360 0; loop: true; dur: 10000\"\n                    ></a-entity>\n                </Marker>\n            </AFrameRenderer> */}\n            <a-scene arjs=\"sourceType:webcam\">\n                <a-marker preset=\"hiro\">\n                    <a-entity\n                        grab\n                        position=\"0 -1 0\"\n                        scale=\"0.05 0.05 0.05\"\n                        gltf-model=\"https://arjs-cors-proxy.herokuapp.com/https://raw.githack.com/AR-js-org/AR.js/master/aframe/examples/image-tracking/nft/trex/scene.gltf\"\n                        animation=\"property: rotation; to: 0 360 0; loop: true; dur: 10000\"\n                    ></a-entity>\n                </a-marker>\n                <a-entity camera></a-entity>\n            </a-scene>\n        </>\n    )\n}\n\nexport { ModelTrackMarkerComponent };","import React from 'react';\nimport '../assets/css/index.scss';\nimport {\n    FacebookShareButton,\n    FacebookIcon,\n    TwitterShareButton,\n    TwitterIcon,\n    LinkedinShareButton,\n    LinkedinIcon\n} from \"react-share\";\n\n\n\nconst SocialMediaComponent = () => {\n \n\n    return (\n        <>\n            <div className=\"fb\">\n                <FacebookShareButton\n                    url={' https://hugoapgarcia.github.io/AR/'}\n                    quote={\"AR-Experience\"}\n                    hashtag=\"#AR\">\n                    <FacebookIcon />\n                </FacebookShareButton>\n            </div>\n            <div className=\"tw\">\n                <TwitterShareButton\n                    url={' https://hugoapgarcia.github.io/AR/'}\n                    title={\"AR-Experience\"}\n                    hashtag=\"#AR\">\n                    <TwitterIcon />\n                </TwitterShareButton>\n            </div>\n            <div className=\"link\">\n                <LinkedinShareButton\n                    url={' https://hugoapgarcia.github.io/AR/'}\n                    title={\"AR-Experience\"}\n                    hashtag=\"#AR\">\n                    <LinkedinIcon />\n                </LinkedinShareButton>\n            </div>\n        </>\n    )\n}\n\nexport { SocialMediaComponent };","\nimport React, { Component } from 'react';\n\nimport { NavComponent, BasicSceneComponent, SocialMediaComponent } from '../../components/common';\n\nclass SceneTemplateContainer extends Component {\n\n    // eslint-disable-next-line \n    constructor(props) {\n        super(props)\n    }\n\n\n    render() {\n        return (\n            <>\n                <NavComponent />\n                <BasicSceneComponent />\n                <SocialMediaComponent />\n            </>\n\n        );\n    }\n}\n\nexport default SceneTemplateContainer;"],"sourceRoot":""}