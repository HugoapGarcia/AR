{"version":3,"sources":["router.jsx","reportWebVitals.js","index.js"],"names":["TrackingScence","React","lazy","EarthTrackingScence","ModelTrackingScence","AppRouter","fallback","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"iLAIMA,EAAiBC,IAAMC,MAAK,kBAAM,gCAClCC,EAAsBF,IAAMC,MAAK,kBAAM,gCACvCE,EAAsBH,IAAMC,MAAK,kBAAM,gCAwB9BG,EAtBG,WAEd,OACI,mCACI,cAAC,WAAD,CAAUC,SAAU,4CAApB,SACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACI,cAACR,EAAD,MAEJ,cAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,SAAlB,SACI,cAACL,EAAD,MAEJ,cAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,SAAlB,SACI,cAACJ,EAAD,gBCVbK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,mCAEE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4fb9ed64.chunk.js","sourcesContent":["import React, { Suspense } from 'react';\n// import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nconst TrackingScence = React.lazy(() => import('./container/tracking'));\nconst EarthTrackingScence = React.lazy(() => import('./container/earthTracking'));\nconst ModelTrackingScence = React.lazy(() => import('./container/3Dmodel'));\n\nconst AppRouter = () => {\n\n    return (\n        <>\n            <Suspense fallback={<p>Loading ...</p>}>\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <TrackingScence />\n                        </Route>\n                        <Route exact path=\"/earth\">\n                            <EarthTrackingScence />\n                        </Route>\n                        <Route exact path=\"/model\">\n                            <ModelTrackingScence />\n                        </Route>\n                    </Switch>\n                </Router>\n            </Suspense>\n        </>\n    )\n}\nexport default AppRouter;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import App from './App';\nimport AppRouter from './router';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <>\n    {/* <App /> */}\n    <AppRouter />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n"],"sourceRoot":""}