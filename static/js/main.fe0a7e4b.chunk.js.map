{"version":3,"sources":["helpers/AFrameRender.jsx","helpers/Marker.jsx","components/common/basicScene.jsx","components/assets/img/earth.png","App.js","reportWebVitals.js","index.js"],"names":["PARAMETERS","AFrameRenderer","container","document","body","renderer","componentWillUnmount","dispose","passSceneRef","getSceneRef","ref","renderVirtualComponent","component","ReactDOM","createPortal","inherentMode","value","prepareToolKitParams","parameters","toolKitParams","Object","keys","forEach","param","includes","flush","props","arToolKit","children","inherent","rest","sceneRef","embedded","arjs","this","Component","defaultProps","childContextTypes","PropTypes","bool","Marker","shouldUseCustomMarker","markerProps","undefined","preset","url","patternUrl","renderUsingMatrixMode","context","contextTypes","BasicSceneComponent","id","src","crossOrigin","geometry","material","random-color","snap","radius","height","theta-length","mixin","position","attribute","to","repeat","App","className","FacebookShareButton","quote","hashtag","FacebookIcon","TwitterShareButton","title","TwitterIcon","LinkedinShareButton","LinkedinIcon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","getElementById"],"mappings":"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","file":"static/js/main.fe0a7e4b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\nconst PARAMETERS = [\n  // Core config\n  \"detectionMode\",\n  \"matrixCodeType\",\n  \"cameraParametersUrl\",\n  \"maxDetectionRate\",\n\n  // Source configuration\n  \"sourceType\",\n  \"sourceUrl\",\n  \"sourceWidth\",\n  \"sourceHeight\",\n\n  // Canvas dimensions\n  \"displayHeight\",\n  \"displayWidth\",\n  \"canvasWidth\",\n  \"canvasHeight\",\n\n  // Tracking module ['tango', 'artoolkit', 'best']\n  \"trackingMethod\",\n  \"areaLearningButton\",\n  \"performanceProfile\",\n  \"tangoPointCloudEnabled\",\n  \"debugUIEnabled\"\n];\n\n/**\n * AFrameRenderer\n * \n * Render aframe.io primitives using a single marker\n * \n * Use multiple markers (independent) and render different objects\n * \n * Use camera as an entity or use cameraTransformMatrix (camera movement)\n *  \n * Can also render aframe.io bindings for React (WebVR) \n *\n * Bugs/Errors to patch:\n * \n * AR.js gives this error 'THREEx.ArMarkerControls: 'markersAreaEnabled' is not a property of this material.'\n * \n * Why ?\n * - Composition\n * - DRY code\n * - Abstraction over artoolkit\n */\nexport default class AFrameRenderer extends Component {\n  container = document.body;\n  renderer = null;\n\n  static propTypes = {\n    arToolKit: PropTypes.shape({\n      sourceType: PropTypes.string,\n      sourceUrl: PropTypes.string,\n      debugUIEnabled: PropTypes.bool,\n      detectionMode: PropTypes.string,\n      matrixCodeType: PropTypes.string,\n      cameraParametersUrl: PropTypes.string,\n      maxDetectionRate: PropTypes.number,\n      sourceWidth: PropTypes.number,\n      sourceHeight: PropTypes.number,\n      displayWidth: PropTypes.number,\n      displayHeight: PropTypes.number,\n      canvasWidth: PropTypes.number,\n      canvasHeight: PropTypes.number\n    }),\n    getSceneRef: PropTypes.func,\n    inherent: PropTypes.bool\n  };\n\n  static defaultProps = {\n    arToolKit: {},\n    getSceneRef: () => {}, // No ref\n    inherent: true // use modelViewMatrix\n  };\n\n  static childContextTypes = {\n    inherent: PropTypes.bool\n  };\n\n  // This prop is used by the <Marker /> component to decide whether to use modelViewMatrix or cameraTransformMatrix\n  getChildContext() {\n    return {\n      inherent: this.props.inherent\n    };\n  }\n\n  // Clear the rendering context\n  // Fallback if <a-scene /> primitive fails to dispose the renderer\n  componentWillUnmount = () => {\n    this.renderer && this.renderer.dispose();\n  };\n\n  // Pass <a-scene /> reference as a prop. Useful for usage with aframe.io APIs\n  passSceneRef = (getSceneRef, ref) => getSceneRef(ref) || ref;\n\n  // We need to render the <a-scene> outside the parent container\n  // because arjs adds the image (sourceType) outside the parent container\n  // and the tracking module cannot track the position of the marker lying outside its context\n\n  // Alternate will be to change this behavior in arjs's aframe fork but\n  // its not convenient at all because it may break their internals (AR.js, aframe fork and threex.artoolkit)\n  renderVirtualComponent = component =>\n    ReactDOM.createPortal(component, this.container);\n\n  // Use a basic marker component and a camera entity (modelViewMatrix)\n  // Determines what user sees. There are no mappings for props on this component i.e userheight: 0\n  // The camera is static and its present in negative z-axis\n  // static at (0, 0, 0)\n  inherentMode = value => (value ? <a-camera-static /> : null);\n\n  // arjs toolkit parameters (these mappings are already validated in arjs)\n  prepareToolKitParams = parameters => {\n    let toolKitParams = \"\";\n\n    Object.keys(parameters).forEach(param => {\n      if (PARAMETERS.includes(param)) {\n        toolKitParams += `${param}: ${parameters[param]};`;\n      }\n    });\n\n    return toolKitParams;\n  };\n\n  // Flush the output\n  flush = props => {\n    const { arToolKit, children, getSceneRef, inherent, ...rest } = props;\n\n    return this.renderVirtualComponent(\n      <a-scene\n        // Forward the scene reference as it is useful in VR enter and exit events\n        // where this ref node can be use to add or remove content\n        ref={sceneRef =>\n          this.passSceneRef(getSceneRef, sceneRef) &&\n          (this.renderer = sceneRef)}\n        // Remove full screen props from the canvas\n        embedded\n        // Custom component registered by arjs\n        arjs={this.prepareToolKitParams(arToolKit)}\n        // Inject the rest of the component props\n        {...rest}\n      >\n        {children}\n        {this.inherentMode(inherent)}\n      </a-scene>\n    );\n  };\n\n  render() {\n    // Renderless! (we currently use portals to render in body and not in parent container)\n    return this.flush(this.props);\n  }\n}","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Renders an object under a marker with a preset or a patternUrl\nexport default class Marker extends Component {\n  static propTypes = {\n    parameters: PropTypes.shape({\n      type: PropTypes.string,\n      size: PropTypes.number,\n      patternUrl: PropTypes.string,\n      url: PropTypes.string,\n      barcodeValue: PropTypes.number,\n      changeMatrixMode: PropTypes.string,\n      minConfidence: PropTypes.number,\n      preset: PropTypes.string,\n      markerhelpers: PropTypes.bool,\n      \"hit-testing-enabled\": PropTypes.bool,\n      \"hit-testing-renderDebug\": PropTypes.bool\n    })\n  };\n\n  static defaultProps = {\n    // arjs component already has a mapping to default parameters,\n    parameters: {}\n  };\n\n  static contextTypes = {\n    inherent: PropTypes.bool\n  };\n\n  // Render using a custom marker\n  shouldUseCustomMarker = markerProps => {\n    if (markerProps !== undefined && markerProps.preset === \"custom\") {\n      markerProps.url = markerProps.patternUrl;\n      // We don't need patternUrl anymore when dealing with custom markers, so goodbye!\n      delete markerProps.patternUrl;\n      return markerProps;\n    }\n  };\n\n  renderUsingMatrixMode = props => {\n    // Check if the component is using a custom marker\n    this.shouldUseCustomMarker(props.parameters);\n\n    // Track the marker movement and use modelViewMatrix\n    if (this.context.inherent) {\n      return <a-marker {...props.parameters}>{props.children}</a-marker>;\n    } else {\n      // Track the movement of the camera and use cameraTransformMatrix\n      // Uses cameraTransformMatrix as matrix mode for tracking the movement of the camera instead of the object\n      return (\n        <a-marker-camera {...props.parameters}>\n          {props.children}\n        </a-marker-camera>\n      );\n    }\n  };\n\n  render() {\n    return this.renderUsingMatrixMode(this.props);\n  }\n}","import React from 'react';\nimport { AFrameRenderer } from '../../helpers';\n\nconst BasicSceneComponent = () => {\n  \n    return (\n        <>\n            <a-scene arjs=\"debugUIEnabled: false; sourceType: image \">\n                <a-assets>\n                    <img id=\"groundTexture\" src=\"https://cdn.aframe.io/a-painter/images/floor.jpg\" crossOrigin=\"anonymous\" />\n                    <img id=\"skyTexture\" src=\"https://cdn.aframe.io/a-painter/images/sky.jpg\" crossOrigin=\"anonymous\" />\n                    <a-mixin id=\"voxel\"\n                        geometry=\"primitive: box; height: 0.5; width: 0.5; depth: 0.5\"\n                        material=\"shader: standard\"\n                        random-color\n                        snap=\"offset: 0.25 0.25 0.25; snap: 0.5 0.5 0.5\"></a-mixin>\n                </a-assets>\n\n                <a-cylinder id=\"ground\" src=\"#groundTexture\" radius=\"30\" height=\"0.1\"></a-cylinder>\n\n                <a-sky id=\"background\" src=\"#skyTexture\" theta-length=\"90\" radius=\"30\"></a-sky>\n\n                <a-entity mixin=\"voxel\" position=\"-1 0 -5\"></a-entity>\n                <a-entity mixin=\"voxel\" position=\"0 0 -5\"></a-entity>\n                <a-entity mixin=\"voxel\" position=\"0 1 -5\">\n                    <a-animation attribute=\"rotation\" to=\"0 360 0\" repeat=\"indefinite\"></a-animation>\n                </a-entity>\n                <a-entity mixin=\"voxel\" position=\"1 0 -5\"></a-entity>\n            </a-scene>\n\n        </>\n    )\n}\n\nexport { BasicSceneComponent };","export default __webpack_public_path__ + \"static/media/earth.1b5b8bea.png\";","import React from 'react';\nimport { FacebookShareButton, FacebookIcon, TwitterShareButton, TwitterIcon, LinkedinShareButton, LinkedinIcon } from \"react-share\";\nimport './index.css';\n\n// import { TrackMarker, ModelTrackMarkerComponent, EarthTrackComponent, BasicSceneComponent } from './components/common';\nimport { BasicSceneComponent } from './components/common';\n\nfunction App() {\n  return (\n    <>\n      {/* <TrackMarker/> */}\n      {/* <ModelTrackMarkerComponent /> */}\n      {/* <EarthTrackComponent/> */}\n\n      <BasicSceneComponent />\n\n      <div className=\"fb\">\n        <FacebookShareButton\n          url={' https://hugoapgarcia.github.io/AR/'}\n          quote={\"AR-Experience\"}\n          hashtag=\"#AR\">\n          <FacebookIcon />\n        </FacebookShareButton>\n      </div>\n      <div className=\"tw\">\n        <TwitterShareButton\n          url={' https://hugoapgarcia.github.io/AR/'}\n          title={\"AR-Experience\"}\n          hashtag=\"#AR\">\n          <TwitterIcon />\n        </TwitterShareButton>\n      </div>\n      <div className=\"link\">\n        <LinkedinShareButton\n          url={' https://hugoapgarcia.github.io/AR/'}\n          title={\"AR-Experience\"}\n          hashtag=\"#AR\">\n          <LinkedinIcon />\n        </LinkedinShareButton>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n"],"sourceRoot":""}